@using DevExtremeMvcApp1.Models

@{
    ViewBag.Title = "Index";
}

<h2>Home</h2>

@*@(Html.DevExtreme().DataGrid<Order>()
    .ShowBorders(true)
    .DataSource(d => d.WebApi().Controller("Orders").Key("OrderID"))
    .Columns(columns => {
        columns.AddFor(m => m.OrderID);
        columns.AddFor(m => m.OrderDate);
        columns.AddFor(m => m.CustomerName);
        columns.AddFor(m => m.ShipCountry);
        columns.AddFor(m => m.ShipCity);
    })
    .Paging(p => p.PageSize(10))
    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))
    .GroupPanel(p => p.Visible(true))
    .Grouping(g => g.AutoExpandAll(false))
    .RemoteOperations(true)
    .Summary(s => s
        .TotalItems(totalItems => {
            totalItems.AddFor(m => m.ShipCity).SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems => {
            groupItems.Add().SummaryType(SummaryType.Count);
        })
    )
)*@


@(Html.DevExtreme().Chart().ID("chartContainer1")
        .DataSource(new List<object> {
            new {  Country = "USA",Hydro = 59.8, Oil = 937.6, Gas = 582, Coal = 564.3, Nuclear = 187.9},
            new {  Country = "China",Hydro = 74.2, Oil = 308.6, Gas = 35.1, Coal = 956.9, Nuclear = 11.3},
            new {  Country = "Russia",Hydro = 40, Oil = 128.5, Gas = 361.8, Coal = 105, Nuclear = 32.4},
            new {  Country = "Japan",Hydro = 22.6, Oil = 241.5, Gas = 64.9, Coal = 120.8, Nuclear = 64.8},
            new {  Country = "India",Hydro = 19, Oil = 119.3, Gas = 28.9, Coal = 204.8, Nuclear = 3.8},
            new {  Country = "Germany",Hydro = 6.1, Oil = 123.6, Gas = 77.3, Coal = 85.7, Nuclear = 37.8},
        })
        .Series(s => s
            .Add()
            .ArgumentField("Country")
            .ValueField("Hydro")
            .Type(SeriesType.Bar)
        )
       // .Export(e => e.Enabled(true))
 )
<input type="button" onclick="ExportToServer()" value="Ok"/>
<div id="svgDiv" style="display:none"></div>
<canvas id="canvas" width=1200 height=600 style="display:none"></canvas>
<img id="testImage" src="" style="display:none"/>
<script type="text/javascript">
    function ExportToServer() {
        //debugger;
        try {
            //var chart1 = $("#chartContainer1").dxChart("instance");
            //var chartMarkup = DevExpress.viz.getMarkup([chart1]);
            //$("#svgDiv").html(chartMarkup);
            //var src = "data:image/svg+xml," + encodeURIComponent($("#svgDiv").find('svg').html());

            //$("#testImage").attr('src', src);
            //var s = new XMLSerializer().serializeToString(document.querySelector('svg'))
            //var encodedData = window.btoa(s);
            //var src = "data:image/svg+xml;base64," + document.querySelector('svg').;
            //console.log(src);
            //$("#testImage").attr('src', src);
            //var test = "";

            var svgText = document.querySelector('svg').outerHTML;
            var myCanvas = document.getElementById("canvas");
            var ctxt = myCanvas.getContext("2d");

            

            // usage:
            drawInlineSVG(ctxt, svgText, function() {
                
                $("#testImage").attr('src', canvas.toDataURL());
                WriteImageToPPT();
            });

        } catch (err) {
            alert(err);
        }
        
        //DevExpress.viz.exportFromMarkup(chartMarkup, {
        //    height: 768,
        //    width: 1024,
        //    fileName: "Exported Charts",
        //    format: "PDF"
        //});
    }
    function drawInlineSVG(ctx, rawSVG, callback) {

        var svg = new Blob([rawSVG], {type:"image/svg+xml;charset=utf-8"}),
            domURL = self.URL || self.webkitURL || self,
            url = domURL.createObjectURL(svg),
            img = new Image;
    
        img.onload = function () {
            ctx.drawImage(this, 0, 0);     
            domURL.revokeObjectURL(url);
            callback(this);
        };
    
        img.src = url;
        
    }

    function WriteImageToPPT() {
        var modelData = {};
        modelData.ImageRawData = $("#testImage").attr('src');
        $.ajax({
            url: "Home/WriteImageToPPT",
            method: "POST",
            data: modelData,
            dataType: 'json',
            //contentType: "application/json",
            success: function (response, status, jqXHR) {
                
            },
            error(jqXHR, textStatus, errorThrown) {
                //Do something
            }
        });
    }
</script>